{"version":3,"sources":["Components/Header.js","Components/Lipsum.js","Components/Gasp.js","Components/Rules.js","Components/PinglistForm.js","App.js","serviceWorker.js","index.js"],"names":["Header","React","Component","SHEET_ID","API_KEY","PinglistForm","props","updatePinglist","fetch","updateDoNotPings","generatePinglist","then","response","json","masterlistEntries","values","pinglistArray","noPingArray","keywordsArray","keywords","slice","originalState","state","forEach","e","push","console","log","pinglistEntry","index","userName","trim","userBreeds","split","userSkinAccent","userSpecifics","userDoNotPing","keywordsBlueprint","length","indexOf","reselling","keywordsChecked","keywordID","selectedBreed","sasSelected","some","r","setState","currentPinglist","join","catch","onKeywordClick","selected","acopy","Array","from","splice","isKeywordSelected","checkForButtonActivation","isBreedSelected","isSasSelected","isResellSelected","isReselling","disableGen","onBreedChange","bind","onSasChange","onResellChange","event","this","target","value","Form","translation","Container","Row","xs","sm","md","lg","xl","Col","FormGroup","Input","type","defaultValue","name","id","onChange","disabled","breedlist","map","item","key","className","Button","outline","onClick","active","includes","color","size","text","App","breedList","keywordList","rulesList","langList","currentTranslation","getSheetValues","sheetID","tabName","cellRange","requestRange","onLanguageChange","valuesArray","breedsArray","innerArray","translationList","languageList","currentItem","currentIndex","i","isArray","breedsLoaded","Object","entries","keywordsLoaded","rulesLoaded","langLoaded","fluid","offset","href","dangerouslySetInnerHTML","__html","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.17521eda.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Header extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>GASP</h1>\r\n\t\t\t\t<h2>Optimized for Sheets v4 by Duosora</h2>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nclass Lipsum extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus volutpat venenatis arcu, eu feugiat ipsum suscipit ut. Nulla fringilla, risus non viverra eleifend, turpis justo scelerisque eros, vitae malesuada enim arcu ut dolor. Phasellus rutrum vel lectus vel iaculis. Proin rhoncus neque in arcu condimentum euismod. Integer diam neque, congue in dolor in, maximus feugiat lorem. Ut dictum venenatis justo. In eget nulla dapibus, mattis quam tristique, accumsan mi. Aliquam elit purus, laoreet id porta vitae, iaculis quis enim. Proin libero quam, porta ac risus at, semper dapibus dui. Etiam scelerisque, leo quis aliquam mattis, ante tellus hendrerit mauris, non lacinia massa dui eu felis. Integer porttitor tristique tristique.</p>\r\n\r\n\t\t\t\t<p>Nullam tristique id nibh nec viverra. In id sapien at dolor tincidunt sodales. Vivamus purus arcu, sagittis in varius vel, auctor ac dolor. Vestibulum fringilla blandit nisi, sed interdum velit imperdiet id. Aenean efficitur ut velit in bibendum. Nullam sed egestas quam, laoreet interdum libero. Morbi vulputate tincidunt nunc sit amet ornare.</p>\r\n\r\n\t\t\t\t<p>In vehicula lectus non sapien molestie, blandit rutrum orci imperdiet. Nunc dolor sem, condimentum sit amet ullamcorper ut, elementum sit amet lorem. Phasellus magna nulla, consequat vel tortor quis, placerat posuere erat. In placerat nibh turpis, nec pharetra felis vestibulum quis. Sed volutpat id diam sed placerat. Etiam cursus volutpat mollis. Ut placerat vulputate facilisis. Aliquam sit amet diam odio. Curabitur vitae diam id metus scelerisque vestibulum. Ut feugiat lorem ut tellus interdum volutpat. Curabitur commodo iaculis elit in bibendum. Vivamus nec purus eget est interdum pellentesque. Nulla varius mattis ultrices. Integer sed ex in augue sagittis tempus ac ut sem. Quisque pulvinar nisl ut dolor pharetra, id porttitor nulla feugiat. Nullam vulputate mauris at est pretium volutpat congue ut enim.</p>\r\n\r\n\t\t\t\t<p>Ut eu commodo eros. Etiam porttitor purus ac nisl scelerisque, sit amet ultricies nunc luctus. Donec a lorem at dui consectetur dignissim. Curabitur volutpat semper nisl, ut ultrices nisl rhoncus eu. Nulla blandit scelerisque ornare. Ut sed lobortis mi. In tincidunt congue pharetra. Phasellus sed ipsum ex. Fusce sit amet ante nunc. Curabitur aliquam libero nec tempus lobortis. In rhoncus egestas est, quis laoreet sapien ultricies vel. Morbi interdum lectus vel luctus sagittis. Nam a tellus scelerisque, ultricies nunc sit amet, bibendum ipsum.</p>\r\n\r\n\t\t\t\t<p>Nam maximus tincidunt maximus. Etiam imperdiet nibh eget tellus vehicula lacinia. Suspendisse aliquam semper ligula sit amet vehicula. Proin erat velit, eleifend in fringilla et, euismod ut tellus. Vestibulum nec condimentum sapien. Praesent tincidunt rhoncus facilisis. Sed ultrices quam sit amet mauris finibus aliquam. Vivamus vel arcu eu erat vehicula hendrerit et in elit. Donec bibendum purus sapien, eget sodales magna feugiat non. Fusce vehicula malesuada mi ut vehicula. Pellentesque eu convallis nibh, sed tempus justo.</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Lipsum;","import React from 'react';\r\n\r\n\r\n\r\n\r\n\r\nclass Gasp extends React.Component {\r\n\t  \r\n}\r\n\r\nexport default Gasp;","import React from 'react';\r\n\r\nclass Rules extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\tRules!!!\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Rules;","import React from 'react';\r\nimport { Container, Row, Col, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport './PinglistForm.css';\r\n\r\nconst SHEET_ID = '13Qr1i85_XXrflbOD-4IYbEA8do_G-K_nD86VW1GDSig';\r\nconst API_KEY  = 'AIzaSyDGLVvBm5uNAMlLEV1q-h9Gpu1misQg6I8';\r\n\r\nclass PinglistForm extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tkeywordsChecked: [],\r\n\t\t\tisBreedSelected: false,\r\n\t\t\tisSasSelected: false,\r\n\t\t\tisResellSelected: false,\r\n\t\t\tisKeywordSelected: 0,\r\n\t\t\tselectedBreed: \"\",\r\n\t\t\tsasSelected: \"\",\r\n\t\t\tisReselling: false,\r\n\t\t\tdisableGen: true,\r\n\t\t\tcurrentPinglist: \"\"\r\n\t\t};\r\n\t\t\r\n\t\tthis.onBreedChange  = this.onBreedChange.bind(this);\r\n\t\tthis.onSasChange    = this.onSasChange.bind(this);\r\n\t\tthis.onResellChange = this.onResellChange.bind(this);\r\n\t}\r\n\t\r\n\tupdatePinglist = () => {\r\n\t\tlet requestRange = \"'Master List'!B2:F\";\r\n\t\t\r\n\t\treturn fetch(`https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${requestRange}?key=${API_KEY}`);\r\n\t}\r\n\t\r\n\tupdateDoNotPings = () => {\r\n\t\tlet requestRange = \"'Do not ping'!A:A\";\r\n\t\t\r\n\t\treturn fetch(`https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${requestRange}?key=${API_KEY}`);\r\n\t}\r\n\t\r\n\tgeneratePinglist = () => {\r\n\t\t// Every time we generate the pinglist, we update the pinglist.\r\n\t\t\r\n\t\tthis.updatePinglist()\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(response => {\r\n\t\t\t\tlet masterlistEntries = response.values;\r\n\t\t\t\t\r\n\t\t\t\tthis.updateDoNotPings()\r\n\t\t\t\t\t.then(response => response.json())\r\n\t\t\t\t\t.then(response => {\r\n\t\t\t\t\t\tlet pinglistArray   = [];\r\n\t\t\t\t\t\tlet noPingArray     = [];\r\n\t\t\t\t\t\tlet keywordsArray   = this.props.keywords.slice(1);\r\n\t\t\t\t\t\tlet originalState   = this.state;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tresponse.values.forEach(function(e) {\r\n\t\t\t\t\t\t\tnoPingArray.push(e[0]);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tconsole.log(noPingArray);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tmasterlistEntries.forEach(function(pinglistEntry, index) {\r\n\t\t\t\t\t\t\tlet userName          = pinglistEntry[0].trim();\r\n\t\t\t\t\t\t\tlet userBreeds        = pinglistEntry[1].split(', '); // get user's breeds\r\n\t\t\t\t\t\t\tlet userSkinAccent    = pinglistEntry[2].split(', '); // get user's skin accent preference\r\n\t\t\t\t\t\t\tlet userSpecifics     = pinglistEntry[3].split(', '); // get user's keywords (specifics)\r\n\t\t\t\t\t\t\tlet userDoNotPing     = null;\r\n\t\t\t\t\t\t\tlet keywordsBlueprint = [];\r\n\r\n\t\t\t\t\t\t\tif(pinglistEntry.length > 4) {\r\n\t\t\t\t\t\t\t\tuserDoNotPing = pinglistEntry[4].split(', '); // get user's do not pings\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(noPingArray.indexOf(userName) >= 0) {\r\n\t\t\t\t\t\t\t\t// This user doesn't want to be pinged at all. Skip.\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(originalState.reselling) {\r\n\t\t\t\t\t\t\t\tif(userDoNotPing === null) {\r\n\t\t\t\t\t\t\t\t\t// somewhere in the future, we might want a keyword 'resell' to index\r\n\t\t\t\t\t\t\t\t\t//keywordsBlueprint.push('resell');\r\n\t\t\t\t\t\t\t\t} else if(userDoNotPing.indexOf('resell') >= 0) {\r\n\t\t\t\t\t\t\t\t\t// This user does not want to be pinged for reselling!\r\n\t\t\t\t\t\t\t\t\t// Proceed to another user.\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// somewhere in the future, we might want a keyword 'resell' to index\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\toriginalState.keywordsChecked.forEach(function(keywordID) {\r\n\t\t\t\t\t\t\t\tif(userDoNotPing === null) {\r\n\t\t\t\t\t\t\t\t\tkeywordsBlueprint.push(keywordsArray[keywordID]);\r\n\t\t\t\t\t\t\t\t} else if(userDoNotPing.indexOf(keywordsArray[keywordID]) < 0) {\r\n\t\t\t\t\t\t\t\t\tkeywordsBlueprint.push(keywordsArray[keywordID]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif((userDoNotPing !== null)&&(keywordsBlueprint.length == 0)) {\r\n\t\t\t\t\t\t\t\t// If all the keywords were filtered by 'do not ping' list, don't ping such user.\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// Seek if the user has the breed.\r\n\t\t\t\t\t\t\tif(userBreeds.indexOf(originalState.selectedBreed) < 0) {\r\n\t\t\t\t\t\t\t\t// The needed breed is absent, don't add this user to pinglist.\r\n\t\t\t\t\t\t\t\t// Skip to the next user.\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(userSkinAccent.indexOf(originalState.sasSelected) < 0) {\r\n\t\t\t\t\t\t\t\t// The needed sas is absent, don't add this user to pinglist.\r\n\t\t\t\t\t\t\t\t// Skip to the next user.\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(userSpecifics.indexOf('no preference') < 0) {\r\n\t\t\t\t\t\t\t\t// seek for keywords. the user has preferences.\r\n\t\t\t\t\t\t\t\tif(keywordsBlueprint.some(r=> userSpecifics.indexOf(r) >= 0)) {\r\n\t\t\t\t\t\t\t\t\t// add to pinglist\r\n\t\t\t\t\t\t\t\t\tpinglistArray.push(userName);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// the user has no preference, so with matching breed, we proceed.\r\n\t\t\t\t\t\t\t\tpinglistArray.push(userName);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(pinglistArray.length > 0) {\r\n\t\t\t\t\t\t\tthis.setState({currentPinglist: '@'+pinglistArray.join(' @')});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.setState({currentPinglist: 'No users to ping, please change your criteria or come back later!'});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).catch();\r\n\t\t\t}).catch();\r\n\t}\r\n\t\r\n\tonKeywordClick = (selected) => {\r\n\t\tlet index = this.state.keywordsChecked.indexOf(selected);\r\n\t\tlet acopy = Array.from(this.state.keywordsChecked);\r\n\t\t\r\n\t\tif (index < 0) {\r\n\t\t\tacopy.push(selected);\r\n\t\t} else {\r\n\t\t\tacopy.splice(index,1);\r\n\t\t}\r\n\t\t\r\n\t\tthis.setState({keywordsChecked: Array.from(acopy)});\r\n\t\tthis.setState({isKeywordSelected: Array.from(acopy).length},() => {\r\n\t\t\tthis.checkForButtonActivation();\r\n\t\t});\r\n\t}\r\n\t\r\n\tonBreedChange(event) {\r\n\t\tthis.setState({selectedBreed: event.target.value});\r\n\t\tthis.setState({isBreedSelected: true},() => {\r\n\t\t\tthis.checkForButtonActivation();\r\n\t\t});\r\n\t}\r\n\t\r\n\tonSasChange(event) {\r\n\t\tthis.setState({sasSelected: event.target.value});\r\n\t\tthis.setState({isSasSelected: true},() => {\r\n\t\t\tthis.checkForButtonActivation();\r\n\t\t});\r\n\t}\r\n\t\r\n\tonResellChange(event) {\r\n\t\tif(event.target.value == 1) {\r\n\t\t\tthis.setState({reselling: true});\r\n\t\t} else if(event.target.value == 2) {\r\n\t\t\tthis.setState({reselling: false});\r\n\t\t}\r\n\t\t\r\n\t\tthis.setState({isResellSelected: true},() => {\r\n\t\t\tthis.checkForButtonActivation();\r\n\t\t});\r\n\t}\r\n\t\r\n\tcheckForButtonActivation() {\r\n\t\tthis.setState({disableGen: !(this.state.isBreedSelected && this.state.isSasSelected && this.state.isResellSelected && (this.state.keywordsChecked.length > 0))});\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Form>\r\n\t\t\t\t<em>{this.props.translation['gasperror']}</em>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Row xs=\"1\" sm=\"1\" md=\"1\" lg=\"1\" xl=\"3\">\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t<Input type=\"select\" defaultValue=\"0\" name=\"breedGenderSelect\" id=\"breedGenderSelect\" onChange={this.onBreedChange}>\r\n\t\t\t\t\t\t\t\t\t<option disabled value=\"0\">{this.props.translation['gaspbg']}</option>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tthis.props.breedlist.slice(1).map((item,index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={index} value={item}>{item}</option>\r\n\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</Input>\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t<Input type=\"select\" defaultValue=\"0\" name=\"typeSelect\" id=\"typeSelect\" onChange={this.onSasChange}>\r\n\t\t\t\t\t\t\t\t\t<option value=\"0\" disabled>{this.props.translation['gaspt']}</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"Accents\">Accents</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"Skins\">Skins</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"Skincents\">Skincents</option>\r\n\t\t\t\t\t\t\t\t</Input>\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t<Input type=\"select\" defaultValue=\"0\" name=\"typeSelect\" id=\"typeSelect\" onChange={this.onResellChange}>\r\n\t\t\t\t\t\t\t\t\t<option value=\"0\" disabled>{this.props.translation['resell']}</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"1\">Yes</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"2\">No</option>\r\n\t\t\t\t\t\t\t\t</Input>\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<h4>{this.props.keywords[0]}:</h4>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<div className=\"keywordContainer\">\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.props.keywords.slice(1).map((item,index) => (\r\n\t\t\t\t\t\t\t\t\t\t<Button outline onClick={() => this.onKeywordClick(index)} active={this.state.keywordsChecked.includes(index)} color=\"info\">{item}</Button> \r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button disabled={this.state.disableGen} color=\"warning\" onClick={() => this.generatePinglist()} size=\"lg\">Generate Pinglist</Button>{' '}\r\n\t\t\t\t\t\t\t<CopyToClipboard text={this.state.currentPinglist}>\r\n\t\t\t\t\t\t\t\t<Button color=\"success\" size=\"lg\">Copy Pinglist</Button>\r\n\t\t\t\t\t\t\t</CopyToClipboard>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<em>By copying this pinglist, you are aware that this pinglist is generated based on your needs. Before copying the pinglist, triple check the fields, and correct any mistakes you might have made in the process to avoid mispings. Thank you for understanding!</em>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t<Input type=\"textarea\" name=\"text\" id=\"exampleText\" value={this.state.currentPinglist} />\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t</Form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PinglistForm;","import React from 'react';\nimport { Container, Row, Col, Input } from 'reactstrap';\nimport Header from './Components/Header';\nimport Lipsum from './Components/Lipsum';\nimport Gasp from './Components/Gasp';\nimport Rules from './Components/Rules';\nimport PinglistForm from './Components/PinglistForm';\nimport './App.css';\n\nconst RULES_SHEET_ID = '1q68G1xsNyUGeZhkHFDqHyuzQKYuCw4BXFaSbmooX-PU';\nconst SHEET_ID       = '1eX0iu8pFksHIqu66dFc3HjsGwLg6c8ZZ9Q-67MuAQPk';\nconst API_KEY        = 'AIzaSyDGLVvBm5uNAMlLEV1q-h9Gpu1misQg6I8';\n\nclass App extends React.Component {\n\t// An object that retrieves the needed data for us to proceed.\n\tstate = {\n\t\tbreedList: {},\n\t\tkeywordList: {},\n\t\trulesList: {},\n\t\tlangList: [],\n\t\tcurrentTranslation: 0\n\t}\n\t\n\tgetSheetValues = (sheetID,tabName,cellRange) => {\n\t\tlet requestRange = cellRange;\n\t\t\n\t\tif(tabName !== null) {\n\t\t\trequestRange = \"'\"+tabName+\"'!\"+requestRange;\n\t\t}\n\t\t\n\t\treturn fetch(`https://sheets.googleapis.com/v4/spreadsheets/${sheetID}/values/${requestRange}?key=${API_KEY}`);\n\t}\n\t\n\tcomponentDidMount() {\n\t\t// Initializing breeds.\n\t\tthis.getSheetValues(SHEET_ID,'Breed','A1:A')\n\t\t\t.then(response => response.json())\n\t\t\t.then(response => {\n\t\t\t\tlet valuesArray = response.values;\n\t\t\t\tlet breedsArray  = [];\n\t\t\t\t\n\t\t\t\tvaluesArray.forEach(function(innerArray) {\n\t\t\t\t\tbreedsArray.push(innerArray[0]);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tthis.setState({breedList: breedsArray});\n\t\t\t})\n\t\t\t.catch();\n\t\t\t\n\t\t// Initializing keywords\n\t\tthis.getSheetValues(SHEET_ID,'Keywords','A1:A')\n\t\t\t.then(response => response.json())\n\t\t\t.then(response => {\n\t\t\t\tlet valuesArray = response.values;\n\t\t\t\tlet keywordsArray  = [];\n\t\t\t\t\n\t\t\t\tvaluesArray.forEach(function(innerArray) {\n\t\t\t\t\tkeywordsArray.push(innerArray[0]);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tthis.setState({keywordList: keywordsArray});\n\t\t\t})\n\t\t\t.catch();\n\t\t\t\n\t\t// Initializing rules\n\t\tthis.getSheetValues(RULES_SHEET_ID,'Translations','A1:X')\n\t\t\t.then(response => response.json())\n\t\t\t.then(response => {\n\t\t\t\tlet translationList = [];\n\t\t\t\tlet languageList    = [];\n\t\t\t\t\n\t\t\t\tresponse.values.forEach(function (currentItem,currentIndex) {\n\t\t\t\t\t// This is the necessary transposing for the translations.\n\t\t\t\t\t// Else the work with them would be soooo messy I'm scared to think lol.\n\t\t\t\t\tfor(let i=1;i<currentItem.length;i++) {\n\t\t\t\t\t\tif(Array.isArray(translationList[i-1]) === false) {\n\t\t\t\t\t\t\ttranslationList[i-1] = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttranslationList[i-1][currentItem[0]] = currentItem[i];\n\t\t\t\t\t\tif(currentItem[0] == 'native') {\n\t\t\t\t\t\t\tlanguageList.push(currentItem[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tconsole.log(languageList);\n\t\t\t\t\n\t\t\t\tthis.setState({rulesList: translationList});\n\t\t\t\tthis.setState({langList: languageList});\n\t\t\t})\n\t\t\t.catch();\n\t}\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.onLanguageChange = this.onLanguageChange.bind(this);\n\t}\n\t\n\tonLanguageChange(event) {\n\t\tthis.setState({currentTranslation: event.target.value});\n\t}\n\t\n  render() {\n\t  let breedsLoaded   = Object.entries(this.state.breedList).length !== 0;\n\t  let keywordsLoaded = Object.entries(this.state.keywordList).length !== 0;\n\t  let rulesLoaded    = Object.entries(this.state.rulesList).length !== 0;\n\t  let langLoaded     = Object.entries(this.state.langList).length !== 0;\n\t  let allLoaded      = breedsLoaded && keywordsLoaded && rulesLoaded && langLoaded;\n\n\treturn allLoaded ? ( \n      <div className=\"App\" >\n\t\t<Container fluid className=\"HeaderRow\">\n\t\t  <Row>\n\t\t\t<Col><Header /></Col>\n\t\t  </Row>\n\t\t  <Row>\n\t\t\t<Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n\t\t\t\t<Input type=\"select\" defaultValue=\"0\" name=\"languageSelect\" id=\"languageSelect\" onChange={this.onLanguageChange}>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.langList.map((item,index) => (\n\t\t\t\t\t\t\t<option key={index} value={index}>{item}</option>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Input>\n\t\t\t</Col>\n\t\t  </Row>\n\t\t</Container>\n\t\t\n\t\t<br/><br/>\n\t  \n\t\t<Container fluid>\n\t\t  <Row xs=\"1\" sm=\"1\" md=\"2\">\n\t\t\t<Col className=\"RulesCol\">\n\t\t\t\t<h3>{this.state.rulesList[this.state.currentTranslation]['rules']}</h3>\n\t\t\t\t<p>{this.state.rulesList[this.state.currentTranslation]['gasprulenote']}</p>\n\t\t\t\t<p><a target=\"_blank\" href=\"http://www1.flightrising.com/forums/skin/2480522\">{this.state.rulesList[this.state.currentTranslation]['gaspthread']}</a></p>\n\t\t\t\t<p><a target=\"_blank\" href=\"http://www1.flightrising.com/forums/skin/2332244\">{this.state.rulesList[this.state.currentTranslation]['gaspqueue']}</a></p>\n\t\t\t\t<p><a target=\"_blank\" href=\"http://www.tracemyip.org/tools/remove-duplicate-words-in-text/\">{this.state.rulesList[this.state.currentTranslation]['duplicateremover']}</a></p>\n\t\t\t\t<ul>\n\t\t\t\t\t<span dangerouslySetInnerHTML={{ __html: this.state.rulesList[this.state.currentTranslation]['gasprule1']}}></span><br/>\n\t\t\t\t\t<span dangerouslySetInnerHTML={{ __html: this.state.rulesList[this.state.currentTranslation]['gasprule2']}}></span><br/>\n\t\t\t\t\t<span dangerouslySetInnerHTML={{ __html: this.state.rulesList[this.state.currentTranslation]['gasprule3']}}></span><br/>\n\t\t\t\t\t<span dangerouslySetInnerHTML={{ __html: this.state.rulesList[this.state.currentTranslation]['gasprule4']}}></span><br/>\n\t\t\t\t\t<span dangerouslySetInnerHTML={{ __html: this.state.rulesList[this.state.currentTranslation]['gasprule5']}}></span><br/>\n\t\t\t\t\t<span dangerouslySetInnerHTML={{ __html: this.state.rulesList[this.state.currentTranslation]['gasprule6']}}></span><br/>\n\t\t\t\t\t<span dangerouslySetInnerHTML={{ __html: this.state.rulesList[this.state.currentTranslation]['gasprule7']}}></span><br/>\n\t\t\t\t\t<span dangerouslySetInnerHTML={{ __html: this.state.rulesList[this.state.currentTranslation]['gasprule8']}}></span><br/>\n\t\t\t\t\t<span dangerouslySetInnerHTML={{ __html: this.state.rulesList[this.state.currentTranslation]['gasprule9']}}></span><br/>\n\t\t\t\t\t<span dangerouslySetInnerHTML={{ __html: this.state.rulesList[this.state.currentTranslation]['gasprule10']}}></span><br/>\n\t\t\t\t</ul>\n\t\t\t</Col>\n\t\t\t<Col className=\"PinglistCol\">\n\t\t\t\t<h3>Pings</h3>\n\t\t\t\t<PinglistForm\n\t\t\t\t\tbreedlist={this.state.breedList}\n\t\t\t\t\tkeywords={this.state.keywordList}\n\t\t\t\t\ttranslation={this.state.rulesList[this.state.currentTranslation]}\n\t\t\t\t/>\n\t\t\t</Col>\n\t\t  </Row>\n\t\t</Container>\n      </div>\n    ) : (\n\t\t<span>Loading . . .</span>\n\t);\n\n  }\n}\n\nexport default App;\n\n/*\n\tBreed list: this.getSheetValues('Breed','A1:A')\n\tKeyword list: this.getSheetValues('Keywords','A1:A')\n\t\n\tMaster list has Usernames, Breeds Genders, Skins/Accents,\n\t\tSpecifics (keywords?) separated by comma and a single space,\n\t\tDon't ping for (also keywords?) separated by comma and a single space\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}